--------
LINKS
--------
+ Learning modern 3D Graphics Programming -- https://paroj.github.io/gltut/index.html
+ Ray tracing   - https://github.com/RayTracing/raytracing.github.io
+ opengl series - https://www.youtube.com/playlist?list=PLvv0ScY6vfd9zlZkIIqGDeG5TUWswkMox
+ 
+ Documentation - https://docs.gl */



--------
COMMANDS
--------
01. $ sudo apt-get install opengl-4-man-doc         : Install opengl man page



GRAPHIC PIPELINE
VERTEX SPECIFICATION >> VERTEX SHADER >> TESSELLATION >> GEOMETRY SHADER

------
SHADER
------
It is a programmable part of the graphics pipeline that enables one to write programs
that runs on the CPU to control the graphic pipeline and render images.

---------------------
VERTEX SPECIFICATION
---------------------
This is well the cpu sets up the coordinate of vertexes that defines the geometry of the object
we want to render.
example: 0.4, 1.3, 3,0    - a vertex-



--------------
VERTEX SHADER 
--------------
It executes on each vertex to position the vertex in the clip space.


--------------
GEOMETRY SHADER
--------------



--------------
RASTERIZATION
--------------
The á¹•rocess of tracing the geometry on screen by filling each pixel with colors




--------------
FRAGMENT SHADER
--------------
Determines the final color of the fragment (pixel)



SDL 
Provides low level access to hardware like screen, keyboard, sound... on the CPU
It would be used to create a window where graphics will be displayed

- Initialize
- mainloop
  +- input
  +- update
  +- render
- cleanup